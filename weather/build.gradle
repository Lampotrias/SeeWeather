import groovy.json.JsonSlurper

plugins {
	id 'com.android.application'
	id 'org.jetbrains.kotlin.android'
	id "org.jetbrains.kotlin.kapt"
	id 'dagger.hilt.android.plugin'
	id 'com.google.gms.google-services'
	id 'com.google.firebase.appdistribution'
}

kapt {
 correctErrorTypes true
}

def getAppCurrentVersionName = {
	def json = new JsonSlurper().parseText(new File(projectDir, 'app_version.json').text)
	return json.build.versionName
}

def getAppCurrentVersionCode = {
	def json = new JsonSlurper().parseText(new File(projectDir, 'app_version.json').text)
	return json.build.versionCode
}

android {
	compileSdk 33

	buildFeatures {
		viewBinding true
	}

	defaultConfig {
		applicationId "com.lampotrias.seeweather"
		minSdk 21
		targetSdk 33
		versionCode getAppCurrentVersionCode()
		versionName getAppCurrentVersionName()

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
						"room.schemaLocation":"$projectDir/schemas".toString(),
						"room.incremental":"true",
						"room.expandProjection":"true"]
			}
		}

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	Properties props = new Properties()
	props.load(new FileInputStream(file("../.signing")))

	signingConfigs {
		release {
			storeFile file(props['keystore'])
			storePassword props['keystore.password']
			keyAlias props['keyAlias']
			keyPassword props['keyPassword']
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

			signingConfig signingConfigs.release

			firebaseAppDistribution {
              artifactType="APK"
              testers="bitrixman@gmail.com"
          }
		}
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
	kotlinOptions {
		jvmTarget = '1.8'
	}
    namespace 'com.lampotrias.seeweather'
}

dependencies {
    def nav_version = "2.5.3"
	def lifecycle_version = "2.5.1"
	def hilt_version = "2.44.2"
	def retrofit_version = "2.9.0"
	def okhttp_version = "4.10.0"
	def fresco_version = "2.6.0"

	implementation 'androidx.core:core-ktx:1.9.0'
	implementation 'androidx.appcompat:appcompat:1.6.1'
	implementation 'com.google.android.material:material:1.9.0-alpha02'
	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
	testImplementation 'junit:junit:4.13.2'
	androidTestImplementation 'androidx.test.ext:junit:1.1.5'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

	implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

	implementation 'com.google.android.gms:play-services-auth:20.4.1'

	implementation("com.squareup.moshi:moshi-kotlin:1.14.0")
	kapt("com.squareup.moshi:moshi-kotlin-codegen:1.14.0")

	implementation("androidx.preference:preference:1.2.0")

	implementation("androidx.fragment:fragment-ktx:1.5.5")

	implementation platform('com.google.firebase:firebase-bom:31.2.2')
	implementation 'com.google.firebase:firebase-analytics-ktx'
	// Navigation
	implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
	implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

	// Coroutines
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'

	// Lifecycle
	implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

	// Hilt
	implementation "com.google.dagger:hilt-android:$hilt_version"
	kapt "com.google.dagger:hilt-compiler:$hilt_version"

	// Network
	implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
	implementation("com.squareup.okhttp3:okhttp:$okhttp_version")

	// room
	implementation "androidx.room:room-runtime:2.5.0"
	kapt "androidx.room:room-compiler:2.5.0"

	// Graphics
	implementation "com.facebook.fresco:fresco:$fresco_version"
}